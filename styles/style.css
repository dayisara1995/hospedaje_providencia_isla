body {
    margin: 0;
    padding: 0;
    line-height: 1.5;
    background-color: rgba(253, 245, 235, 1);
    color: rgb(77, 75, 75);
    /*font-family: "Amatic SC", sans-serif;
    font-weight: 800; controla el grosor de las letras, es decir, qué tan negrita o delgada se ve una fuente*/
}


header {
    height: 100vh;
    /*viewport height. 100% de la altura total de la ventana del navegador*/
    /*padding: 20px 30px;*/
    background-color: rgba(253, 245, 235, 1);
    background-image: url(../imagenes/kitty_warf.jpg);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    /*text-align: center; /* organiza los elementos interiores centradamente*/
    /*position: relative;
    overflow: hidden;*/
}

nav {
    position: fixed;
    /*fixed se queda siempre visible respecto a la ventana, mientras que sticky solo se pega dentro de su contenedor al hacer scroll.*/
    top: 0;
    height: 60px;
    padding: 5px 25px;
    box-sizing: border-box;
    background-color: rgb(253, 245, 235);
    display: flex;
    justify-content: space-between;
    align-items: center;
    /*border-bottom: 2px solid rgb(196, 172, 212);*/
}

nav img {
    /*height: 16%;*/
    width: 12%;
    filter: contrast(200%) saturate(70%);
    padding: 5px;
    /*background-color: rgba(255, 255, 255, 0.822)*/
}

nav ul {
    display: flex;
    gap: 35px;
    /*espacio entre elementos*/
    list-style: none;
}

nav li a {
    padding: 10px;
    text-decoration: none;
    /*text-transform: uppercase;*/
    font-size: 17px;
    color: #03453d;
}

nav li a:hover {
    border-bottom: 1px solid #3d423c;
    color: #3d423c;
    background-color: #3d423c0c;
}

.barra-reservas {
    position: fixed;
    /*antes tenia absolute*/
    top: 60px;
    /* justo debajo del nav */
    width: 100%;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.15);
    /*255, 255, 255 → color blanco. 0.15 → transparencia (alfa), va de 0 a 1: 0 → completamente transparente, 1 → completamente opaco*/
    backdrop-filter: blur(10px);
    /*backdrop-filter: aplica efectos visuales a todo lo que está detrás del elemento, sin afectar el contenido del propio elemento.*/
    /*blur(10px) aplica un desenfoque de 10 píxeles al fondo que se ve a través del elemento. Cuanto mayor es el número, más borroso será el fondo.*/
    /*blur(10px): Aunque no mide un tamaño físico como un div, los píxeles determinan la “distancia de difuminado” de cada punto del fondo. Así que blur(10px) significa que cada píxel se mezcla con los píxeles que están a 10px alrededor.*/
    /*padding: 1rem 2rem;*/
    /*box-shadow: 0 4px 16px rgba(0,0,0,0.25);*/
    /*z-index: 999;*/
    transition: transform 0.2s ease;
    /*Cada vez que cambie la propiedad transform, la animación dura 0.3 segundos y es suave (ease). */
    /*...Esto permite que cuando la barra se mueva (por ejemplo, salga hacia arriba), el movimiento se vea fluido y no brusco.*/
}

.barra-reservas.hidden {
    transform: translateY(-100%);
    /* translateY(-100%) mueve el elemento hacia arriba el 100% de su propia altura, es decir, fuera de la pantalla.*/
    /*Como tiene la transición definida, la barra se desliza suavemente hacia arriba al aplicarse la clase .hidden.*/
}

.form-disponibilidad {
    display: flex;
    /*organiza los elementos hijos en fila (flex-direction: row por defecto).*/
    flex-wrap: wrap;
    /*permite que los flex items se “rompan” en varias filas cuando no caben horizontalmente. Es muy útil para formularios y barras de navegación responsivas, porque evita que los elementos se vean apretados en pantallas pequeñas.*/
    justify-content: center;
    align-items: flex-end;
    /*Todos los campos e inputs se alinean a la misma línea inferior del contenedor. Esto hace que el botón y los inputs queden visualmente nivelados, incluso si tienen alturas distintas.*/
    gap: 1rem;
    /*rem = “root em” → unidad relativa al tamaño de fuente del <html>. Normalmente, el tamaño de fuente del <html> es 16px.*/
    max-width: 1000px;
    /*En pantallas más grandes que 1000px de ancho, el formulario no se estira más allá de eso, para que siga viéndose centrado y estético. En pantallas más pequeñas, el formulario puede encogerse hasta ocupar menos que 1000px (si no hay un width fijo).*/
    margin: 0 auto;
    /*lo centra horizontalmente en la pantalla, dejando espacios iguales a los lados.*/
}

.campo {
    display: flex;
    /*Sus hijos (label e input) se vuelven flex items y pueden organizarse fácilmente.*/
    flex-direction: column;
    /*Los elementos dentro de .campo se organizan verticalmente, uno debajo del otro. Esto hace que el label quede arriba y el input debajo.*/
    flex: 1;
    /*Permite que cada .campo crezca de forma proporcional dentro de su contenedor padre (.form-disponibilidad). Ejemplo: si hay 3 campos en la misma fila, todos se expandirán igualmente para llenar el espacio disponible.*/
    min-width: 150px;
    /*Cada campo no puede ser más estrecho de 150px, aunque el contenedor padre sea muy pequeño. Esto asegura que los inputs sigan siendo legibles en pantallas pequeñas.*/
}

.campo label {
    font-weight: 400;
    /*Hace que el texto del label sea semi-negrita, para que se vea más destacado que el input.*/
    margin-bottom: 0.3rem;
    /*Espacio entre el label y el input debajo, separándolos visualmente. 0.3rem = 0.3 veces el tamaño de fuente raíz (aprox. 4.8px si 1rem = 16px).*/
    color: #f5eadb;
    font-family: "Alumni Sans Pinstripe", sans-serif;
    text-transform: uppercase;
}

.campo input {
    padding: 0.2rem;
    /*Espacio interno dentro del input, arriba, abajo, izquierda y derecha*/
    border: none;
    font-size: 1rem;
    color: #03453d;
}

.btn-buscar {
    background-color: #f5eadb91;
    color: #03453d;
    border-width: 0.1rem;
    border-radius: 0.5rem;
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
    cursor: pointer;
    /*flex-shrink: 0;*/
    transition: background-color 0.3s ease;

}

.btn-buscar:hover {
    background-color: #0a574e94;
    color: #f5eadb;
}


main {
    text-align: center;
    /*padding: 20px;*/
    /*box-sizing: border-box; /*incluye padding dentro del ancho*/
}

h2,
p {
    max-width: 70%;
    /*ajusta el ancho del elemento en relacion a la pantalla  y que no sea fijo*/
    /*min-width: ;*/
    margin: 30px auto;
    /*centra el main horizontalmente */
}

h2 {
    font-size: 28px;
}

p {
    font-size: 18px;
}

.galeria-isla {
    display: flex;
    justify-content: center;
    /* centra horizontalmente */
    align-items: center;
    /* centra verticalmente */
    gap: 5px;
    flex-wrap: nowrap;
    /* permite que se acomoden si el espacio es pequeño */
    width: 70vw;
    /* ocupa todo el ancho visible de la pantalla */
    /*box-sizing: border-box; /* incluye padding/border dentro del ancho total */
    margin: 15px auto;
}

.galeria-isla img {
    width: 33.33%;
    /* cada imagen ocupa el 33% del ancho disponible */
    height: 300px;
    /*max-width: 100%;*/
    padding: 5px;
    object-fit: cover;
}

.galeria-alojamiento {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 5px;
    flex-wrap: nowrap;
    /* permite que se acomoden si el espacio es pequeño */
    width: 70vw;
    /*box-sizing: border-box; /* incluye padding/border dentro del ancho total */
    margin: 15px auto
}

.galeria-alojamiento img {
    width: 25%;
    height: 300px;
    /*max-width: 100%;*/
    padding: 5px;
    object-fit: cover;
}

footer {
    background-color: #f5eadb;
    padding: 30px;
}

/*PENDIENTE quitar subrayado links*/


.contacto svg {
    width: 20px;
    height: 20px;
}

/* Footer organizado con Flex*/
#contenedor-caja-footer {
    display: flex;
    justify-content: center;
    gap: 90px;
}

#caja-informacion {
    display: flex;
    flex-direction: column;
    list-style: none;
}

#caja-contacto {
    display: flex;
    flex-direction: column;
    /*white-space: nowrap; /*Propiedad: valor; ---Propiedad que vi en chatGPT para evitar salto de línea */
}

.social-links a {
    display: inline-block;
    margin: 0 5px;
    width: 25px;
    fill: #999;
}

.social-links a:hover {
    fill: #0a574e94;
    transform: scale(1.1);
}